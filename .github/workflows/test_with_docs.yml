name: Test and upload reports

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-json-report pandas
    
    - name: Run tests with pytest
      continue-on-error: true
      run: |
        pytest tests/ --cov=calculator --cov-report=annotate --json-report --json-report-file=test-results.json
    
    - name: Convert coverage to CSV
      run: |
        python -c "
import coverage
cov = coverage.Coverage()
cov.load()
data = cov.get_data()
lines = []
for file in data.measured_files():
    for line in data.lines(file):
        lines.append({'file': file, 'line': line, 'covered': line in data._lines[file]})
import pandas as pd
df = pd.DataFrame(lines)
df.to_csv('coverage.csv', index=False)
"
    
    - name: Convert test results to CSV
      run: |
        python -c "
import json
import pandas as pd
with open('test-results.json') as f:
    data = json.load(f)
tests = [{'test': t['nodeid'], 'outcome': t['outcome'], 'duration': t['duration']} for t in data['tests']]
df = pd.DataFrame(tests)
df.to_csv('test-results.csv', index=False)
"
    
    - name: Set up Git for pushing reports
      run: |
        git config --global user.name "GitHub Action"
        git config --global user.email "action@github.com"
    
    - name: Checkout docs branch
      uses: actions/checkout@v4
      with:
        ref: docs
        path: docs-branch
    
    - name: Copy test reports to docs directory
      run: |
        mkdir -p docs-branch/docs
        cp coverage.csv test-results.csv docs-branch/docs/
    
    - name: Commit test reports
      run: |
        cd docs-branch
        git add docs/coverage.csv docs/test-results.csv
        git commit -m "Update test reports in CSV format" || echo "No changes to commit"
    
    - name: Push test reports to docs branch
      uses: ad-m/github-push-action@v0.8.0
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: docs
        directory: docs-branch
